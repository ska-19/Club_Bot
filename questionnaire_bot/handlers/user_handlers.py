from aiogram.filters import Command, CommandStart
from aiogram.fsm.context import FSMContext
from aiogram import Router, types

from keyboards.user_keyboards import get_main_kb

from confige import BotConfig

import io
from sqlalchemy import select
from database.models import Questionnaire, async_session
from aiogram.types import BufferedInputFile
import pandas as pd

router = Router()


@router.message(Command("dice"))
async def cmd_dice(message: types.Message):
    await message.answer_dice(emoji="üé≤")
    await message.delete()


@router.message(CommandStart())
async def cmd_start(message: types.Message, config: BotConfig, state: FSMContext):
    is_admin = False
    if message.from_user.id in config.admin_ids:
        is_admin = True
    await message.answer(
        text="üëãüèª <b>–ü—Ä–∏–≤–µ—Ç! –Ø –±–æ—Ç-–∞–Ω–∫–µ—Ç–∞, —Å–æ–±–∏—Ä–∞—é—â–∏–π –¥–∞–Ω–Ω—ã–µ –¥–ª—è –∏—Å—Å–ª–µ–¥–æ–≤–∞–Ω–∏—è.</b> \n\n"
             "–í –∞–Ω–∫–µ—Ç–µ –≤—Å–µ–≥–æ 12 –ø—Ä–æ—Å—Ç—ã—Ö –ø—Ä–æ—Å—Ç—ã—Ö –≤–æ–ø—Ä–æ—Å–æ–≤, –≤—Ä–µ–º—è –ø—Ä–æ—Ö–æ–∂–¥–µ–Ω–∏—è ~2 –º–∏–Ω—É—Ç—ã. \n\n"
             "–î–∞–≤–∞–π—Ç–µ –Ω–∞—á–Ω–µ–º! üëâüèª/quest",
        reply_markup=get_main_kb(is_admin)
    )
    await state.clear()


@router.message(Command("admin_info"))
async def cmd_admin_info(message: types.Message, config: BotConfig):
    if message.from_user.id in config.admin_ids:
        await message.answer(text="You are an admin.")
    else:
        await message.answer("You are not an admin.")

    await message.delete()


@router.message(Command("admin_exp_csv"))
async def cmd_admin_export_db(message: types.Message, config: BotConfig):
    if message.from_user.id in config.admin_ids:
        try:
            async with async_session() as session:
                query = select(Questionnaire)
                result = await session.execute(query)
                data = result.scalars().all()
                data = [q.__dict__ for q in data[1:]]
                df = pd.DataFrame(data)

            with io.BytesIO() as temp_buffer:
                df.to_csv(temp_buffer, index=False)
                temp_buffer.seek(0)
                await message.answer_document(
                    BufferedInputFile(temp_buffer.getvalue(), filename='data.csv'))
        except Exception as e:
            print("Error accessing file:", e)
    else:
        await message.answer("You are not an admin.")

    await message.delete()


@router.message(Command("admin_exp_xlsx"))
async def cmd_admin_export_db(message: types.Message, config: BotConfig):
    if message.from_user.id in config.admin_ids:
        try:
            async with async_session() as session:
                query = select(Questionnaire)
                result = await session.execute(query)
                data = result.scalars().all()
                data = [q.__dict__ for q in data[1:]]
                df = pd.DataFrame(data)

            with io.BytesIO() as temp_buffer:  # Change this to StringIO
                df.to_excel(temp_buffer, index=False)
                temp_buffer.seek(0)
                await message.answer_document(
                    BufferedInputFile(temp_buffer.getvalue(), filename='data.xlsx'))
        except Exception as e:
            print("Error accessing file:", e)
    else:
        await message.answer("You are not an admin.")

    await message.delete()


# help
@router.message(Command("help"))
async def cmd_help(message: types.Message):
    await message.answer(
        text="üìç –î–æ—Å—Ç—É–ø–Ω—ã–µ –∫–æ–º–∞–Ω–¥—ã: \n"
             "/start - –Ω–∞—á–∞–ª–æ —Ä–∞–±–æ—Ç—ã —Å –±–æ—Ç–æ–º \n"
             "/quest - –Ω–∞—á–∞—Ç—å –∞–Ω–∫–µ—Ç–∏—Ä–æ–≤–∞–Ω–∏–µ \n"
             "/info - –ø–æ–¥—Ä–æ–±–Ω–æ—Å—Ç–∏ \n"
             "/dice - –∫–∏–Ω—É—Ç—å –∫—É–±–∏–∫ üé≤ \n"
             "/help - –ø–æ–º–æ—â—å \n"
    )
    await message.delete()


@router.message(Command("info"))
async def cmd_info(message: types.Message):
    await message.answer(
        text="üëæ –ë–æ—Ç-–∞–Ω–∫–µ—Ç–∞, —Å–æ–±–∏—Ä–∞—é—â–∏–π –¥–∞–Ω–Ω—ã–µ –¥–ª—è —É–º–Ω–æ–≥–æ —Å—Ç–∞—Ä—à–µ–≥–æ –±—Ä–∞—Ç–∞. \n\n"
             "–î–ª—è –ø—Ä–æ—Ö–æ–∂–¥–µ–Ω–∏—è –∞–Ω–∫–µ—Ç—ã –Ω–∞–∂–º–∏—Ç–µ /quest\n\n"
             "–ë–æ—Ç-–∞–Ω–∫–µ—Ç–∞ –Ω–∏—á–µ–≥–æ –Ω–µ –¥–µ–ª–∞–µ—Ç –∫—Ä–æ–º–µ —Å–±–æ—Ä–∞ –¥–∞–Ω–Ω—ã—Ö.\n"
             "–û—Ç–ø—Ä–∞–≤–ª—è—è –¥–∞–Ω–Ω—ã–µ –≤—ã —Å–æ–≥–ª–∞—à–∞–µ—Ç–µ—Å—å –Ω–∞ –∏—Ö —Å–æ—Ö—Ä–∞–Ω–µ–Ω–∏–µ –∏ –æ–±—Ä–∞–±–æ—Ç–∫—É.\n"
             "–î–ª—è —Å–≤—è–∑–∏ —Å –∞–¥–º–∏–Ω–æ–º –∏—Å–ø–æ–ª—å–∑—É–π—Ç–µ \n/feedback"
    )
    await message.delete()


@router.message(Command("feedback"))
async def cmd_feedback(message: types.Message):
    await message.answer(
        text="ü§´ –î–ª—è —Å–≤—è–∑–∏ —Å –∞–¥–º–∏–Ω–∏—Å—Ç—Ä–∞—Ç–æ—Ä–æ–º –Ω–∞–ø–∏—à–∏—Ç–µ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—é: @yep_admin"
    )
    await message.delete()

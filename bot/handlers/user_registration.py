from aiogram import Router, F
from aiogram.filters import Command, StateFilter
from aiogram.fsm.context import FSMContext
from aiogram.fsm.state import StatesGroup, State
from aiogram.types import Message, ReplyKeyboardRemove

from bot.keyboards.simple_kb import make_row_keyboard, make_colum_keyboard

router = Router()


available_prof_status = ["–ù–æ–≤–∏—á–æ–∫", "–ü—Ä–æ–¥–æ–ª–∂–∞—é—â–∏–π", "–ü—Ä–æ—Ñ–µ—Å—Å–∏–æ–Ω–∞–ª"]
available_achievements_status = ["üîî–í–∫–ª—é—á–∏—Ç—å", "üîï–í—ã–∫–ª—é—á–∏—Ç—å"]


class OrderFood(StatesGroup):
    choosing_prof_status = State()
    choosing_achievements_status = State()


@router.message(StateFilter(None), Command("reg"))
async def cmd_food(message: Message, state: FSMContext):
    await message.answer(
        text="–í—ã –∫–æ–≥–¥–∞-–Ω–∏–±—É–¥—å —Å–æ—Å—Ç–æ—è–ª–∏ –≤ –∫–ª—É–±–∞—Ö –ø–æ –∏–Ω—Ç–µ—Ä–µ—Å–∞–º?\n <b>–í—ã–±–µ—Ä–µ—Ç–µ —Å–≤–æ–π —Å—Ç–∞—Ç—É—Å:</b>",
        reply_markup=make_colum_keyboard(available_prof_status)
    )
    await state.set_state(OrderFood.choosing_prof_status)


@router.message(OrderFood.choosing_prof_status, F.text.in_(available_prof_status))
async def food_chosen(message: Message, state: FSMContext):
    await state.update_data(chosen_status=message.text.lower())
    await message.answer(
        text="–•–æ—Ç–∏—Ç–µ –ª–∏ –≤—ã –ø–æ–ª—É—á–∞—Ç—å —É–≤–µ–¥–æ–º–ª–µ–Ω–∏—è –æ –º–µ—Ä–æ–ø—Ä–∏—è—Ç–∏—è—Ö –æ—Ç –¥—Ä—É–≥–∏—Ö –∫–ª—É–±–æ–≤?",
        reply_markup=make_colum_keyboard(available_achievements_status)
    )
    await state.set_state(OrderFood.choosing_achievements_status)


@router.message(StateFilter("OrderFood:choosing_prof_status"))
async def food_chosen_incorrectly(message: Message):
    await message.answer(
        text="–Ø –Ω–µ –ø–æ–Ω–∏–º–∞—é —Ç–∞–∫–æ–≥–æ –æ—Ç–≤–µ—Ç–∞.\n\n"
             "–ü–æ–∂–∞–ª—É–π—Å—Ç–∞, –≤—ã–±–µ—Ä–∏—Ç–µ –æ–¥–∏–Ω –∏–∑ –≤–∞—Ä–∏–∞–Ω—Ç–æ–≤ –∏–∑ —Å–ø–∏—Å–∫–∞ –Ω–∏–∂–µ:",
        reply_markup=make_colum_keyboard(available_prof_status)
    )


@router.message(OrderFood.choosing_achievements_status, F.text.in_(available_achievements_status))
async def food_size_chosen(message: Message, state: FSMContext):
    user_data = await state.get_data()
    await message.answer(
        text=f"–í—ã {user_data['chosen_status']} –≤ –∫–ª—É–±–Ω–æ–º –¥–µ–ª–µ.\n –£–≤–µ–¥–æ–º–ª–µ–Ω–∏—è: {message.text.lower()[:-2]}–Ω—ã.\n",
        reply_markup=ReplyKeyboardRemove()
    )
    await state.clear()


@router.message(OrderFood.choosing_achievements_status)
async def food_size_chosen_incorrectly(message: Message):
    await message.answer(
        text="–Ø –Ω–µ –ø–æ–Ω–∏–º–∞—é —Ç–∞–∫–æ–≥–æ –æ—Ç–≤–µ—Ç–∞!\n\n"
             "–ü–æ–∂–∞–ª—É–π—Å—Ç–∞, –≤—ã–±–µ—Ä–∏—Ç–µ –æ–¥–∏–Ω –∏–∑ –≤–∞—Ä–∏–∞–Ω—Ç–æ–≤ –∏–∑ —Å–ø–∏—Å–∫–∞ –Ω–∏–∂–µ:",
        reply_markup=make_row_keyboard(available_achievements_status)
    )

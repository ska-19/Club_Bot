from aiogram import Router, F
from aiogram.filters import Command, StateFilter
from aiogram.fsm.context import FSMContext
from aiogram.fsm.state import StatesGroup, State
from aiogram.types import Message, ReplyKeyboardRemove, CallbackQuery

from keyboards.simple_kb import make_colum_keyboard
from keyboards.user_keyboards import get_main_ikb, get_back_button

from database import request as rq

router = Router()


class CreateClub(StatesGroup):
    enter_name = State()
    enter_dest = State()
    enter_bio = State()
    enter_link_channel = State()


@router.callback_query(F.data == "create_club")
async def cmd_create(callback: CallbackQuery, state: FSMContext):
    await callback.message.answer(
        text="üé© <b>–î–∞–≤–∞–π—Ç–µ —Å–æ–∑–¥–∞–¥–∏–º –∫–ª—É–±</b>\n\n"
             "–î–ª—è –Ω–∞—á–∞–ª–∞ —É–∫–∞–∂–∏—Ç–µ –Ω–∞–∑–≤–∞–Ω–∏–µ –∫–ª—É–±–∞:",
        reply_markup=get_back_button()
    )
    await state.set_state(CreateClub.enter_name)
    await callback.message.delete()


@router.message(CreateClub.enter_name)
async def cmd_enter_name(message: Message, state: FSMContext):
    await state.update_data(name=message.text)
    await message.answer(
        text="2Ô∏è‚É£–¢–µ–ø–µ—Ä—å —É–∫–∞–∂–∏—Ç–µ –Ω–∞–ø—Ä–∞–≤–ª–µ–Ω–∏–µ –∫–ª—É–±–∞ –≤ –æ–¥–Ω–æ-–¥–≤–∞ —Å–ª–æ–≤–∞\n"
             "–Ω–∞–ø—Ä–∏–º–µ—Ä: '—Ñ–∏–Ω–∞–Ω—Å—ã', '–ø—Ä–æ–≥—Ä–∞–º–º–∏—Ä–æ–≤–∞–Ω–∏–µ', '—Ç–∞–Ω—Ü—ã', '—Å–ø–æ—Ä—Ç'",
        reply_markup=get_back_button()
    )
    await state.set_state(CreateClub.enter_dest)
    await message.delete()


@router.message(CreateClub.enter_dest)
async def cmd_enter_dest(message: Message, state: FSMContext):
    await state.update_data(dest=message.text)
    await message.answer(
        text="3Ô∏è‚É£–¢–µ–ø–µ—Ä—å —É–∫–∞–∂–∏—Ç–µ –∫—Ä–∞—Ç–∫–æ–µ –æ–ø–∏—Å–∞–Ω–∏–µ –∫–ª—É–±–∞ –≤ –æ–¥–Ω–æ-–¥–≤–∞ –ø—Ä–µ–¥–ª–æ–∂–µ–Ω–∏—è",
        reply_markup=get_back_button()
    )
    await state.set_state(CreateClub.enter_bio)
    await message.delete()


@router.message(CreateClub.enter_bio)
async def cmd_enter_bio(message: Message, state: FSMContext):
    await state.update_data(bio=message.text)
    await message.answer(
        text="4Ô∏è‚É£–¢–µ–ø–µ—Ä—å —É–∫–∞–∂–∏—Ç–µ —Å—Å—ã–ª–∫—É –Ω–∞ –∫–∞–Ω–∞–ª –∫–ª—É–±–∞\n\n"
             "–ï—Å–ª–∏ —É –≤–∞—Å –Ω–µ—Ç –∫–∞–Ω–∞–ª–∞, –º–æ–∂–µ—Ç–µ —É–∫–∞–∑–∞—Ç—å —Å—Å—ã–ª–∫—É –Ω–∞ –≤–∞—à –ø—Ä–æ—Ñ–∏–ª—å –≤ —Å–æ—Ü. —Å–µ—Ç–∏",
        reply_markup=get_back_button()
    )
    await state.set_state(CreateClub.enter_link_channel)
    await message.delete()


@router.message(CreateClub.enter_link_channel)
async def cmd_enter_link_channel(message: Message, state: FSMContext):
    await state.update_data(channel_link=message.text)
    club_data = await state.get_data()
    await rq.set_club(message.from_user.id, club_data)
    await message.answer(
        text="üéâ <b>–ö–ª—É–± —É—Å–ø–µ—à–Ω–æ —Å–æ–∑–¥–∞–Ω!</b>\n\n"
             f"–ù–∞–∑–≤–∞–Ω–∏–µ: {club_data['name']}\n"
             f"–ù–∞–ø—Ä–∞–≤–ª–µ–Ω–∏–µ: {club_data['dest']}\n"
             f"–û–ø–∏—Å–∞–Ω–∏–µ: {club_data['bio']}\n"
             f"–°—Å—ã–ª–∫–∞ –Ω–∞ –∫–∞–Ω–∞–ª: {club_data['channel_link']}\n\n"
             "–î–ª—è —É–ø—Ä–∞–≤–ª–µ–Ω–∏—è –∫–ª—É–±–æ–º –∏—Å–ø–æ–ª—å–∑—É–π—Ç–µ –∫–Ω–æ–ø–∫–∏ –≤ –ø—Ä–æ—Ñ–∏–ª–µ –∫–ª—É–±–∞.",
        reply_markup=get_main_ikb({'tg_id': message.from_user.id}, is_admin=True)
    )
    await state.clear()
    await message.delete()


@router.callback_query(F.data == "back")
async def cmd_back(callback: CallbackQuery, state: FSMContext):
    is_admin = await rq.is_user_club_admin(callback.message.from_user.id)
    await callback.message.answer(
        text="<b>–í—ã –ø—Ä–µ—Ä–≤–∞–ª–∏ —Å–æ–∑–¥–∞–Ω–∏–µ –∫–ª—É–±–∞</b>",
        reply_markup=get_main_ikb({'tg_id': callback.from_user.id}, is_admin=False)
    )
    await state.clear()

